name: pr-build-push

# on merge to main from pull request (recommended)
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main
    paths:
      - 'src/**'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-push-app:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ github.event.pull_request.head.sha }}
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.vendor=loft.sh
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.description=Simple echo app based on the HashiCorp echo-http.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${{ github.event.pull_request.head.sha }} | cut -c1-8`" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./src
          platforms: linux/amd64
          push: true
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
          labels: ${{ steps.meta.outputs.labels }}
  wakeup-vcluster:
    if: contains(github.event.pull_request.labels.*.name, 'create-pr-vcluster-external-argocd')
    runs-on: ubuntu-latest
    steps:
      - name: Install vCluster CLI
        uses: loft-sh/setup-vcluster@main
      - name: Show vCluster Version
        run: vcluster --version
      - name: Login to vCluster Platform instance
        env:
          VCLUSTER_PLATFORM_URL: ${{ secrets.VCLUSTER_PLATFORM_URL }}
          ACCESS_KEY: ${{ secrets.VCLUSTER_PLATFORM_ACCESS_KEY }}
        run: vcluster platform login $VCLUSTER_PLATFORM_URL --access-key $ACCESS_KEY
      - name: Wakeup PR Virtual Cluster
        run: vcluster platform wakeup vcluster ${{ github.event.repository.name }}-pr-${{ github.event.pull_request.number }}-vcluster
