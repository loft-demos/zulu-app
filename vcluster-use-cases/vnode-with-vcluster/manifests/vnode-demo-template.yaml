apiVersion: management.loft.sh/v1
kind: VirtualClusterTemplate
metadata:
  name: vnode-demo-template
spec:
  displayName: vNode Demo Template
  description: >-
    This template requires that vNode is installed in the host cluster. The template installs the `vnode` `RuntimeClass` into the vCluster and includes two `Deployments` each with an identical highly privileged `Pod` except that one is configured with `runtimeClassName: vnode` and both target the same node of the host cluster.
  owner:
    team: loft-admins
  template:
    metadata: {}
    instanceTemplate:
      metadata: {}
    objects: |
      ---
      apiVersion: node.k8s.io/v1
      kind: RuntimeClass
      metadata:
        name: vnode
      handler: vnode
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: breakout-test
        namespace: default
        labels:
          app: breakout-test
      spec:
        selector:
          matchLabels:
            app: breakout-test
        template:
          metadata:
            labels:
              app: breakout-test
          spec:
            containers:
              - name: breakout
                image: busybox
                command:
                  - /bin/sh
                args:
                  - '-c'
                  - sleep 10000
                securityContext:
                  privileged: true
            nodeSelector:
              kubernetes.io/hostname: '{{ .Values.nodeSelectorHostName }}'
            hostNetwork: true
            hostPID: true
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: breakout-test-vnode
        namespace: default
        labels:
          app: breakout-test-vnode
      spec:
        selector:
          matchLabels:
            app: breakout-test-vnode
        template:
          metadata:
            labels:
              app: breakout-test-vnode
          spec:
            runtimeClassName: vnode
            containers:
              - name: breakout
                image: busybox
                command:
                  - /bin/sh
                args:
                  - '-c'
                  - sleep 10000
                securityContext:
                  privileged: true
            nodeSelector:
              kubernetes.io/hostname: '{{ .Values.nodeSelectorHostName }}'
            hostNetwork: true
            hostPID: true
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: dind-vnode
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: dind-vnode
        template:
          metadata:
            labels:
              app: dind-vnode
          spec:
            runtimeClassName: vnode
            nodeSelector:
              kubernetes.io/hostname: '{{ .Values.nodeSelectorHostName }}'
            containers:
            - name: dind
              image: docker:24.0.2-dind
              securityContext:
                privileged: true  # vNode isolates this
              volumeMounts:
              - name: docker-lib
                mountPath: /var/lib/docker
              - name: docker-run
                mountPath: /var/run
              env:
              - name: DOCKER_TLS_CERTDIR
                value: ""  # Disables TLS inside DinD for simplicity
            volumes:
            - name: docker-lib
              emptyDir: {}
            - name: docker-run
              emptyDir: {}
    pro:
      enabled: true
    helmRelease:
      chart:
        version: 0.27.0
      values: |
        sync:
          toHost:
            ingresses:
              enabled: true
        controlPlane:
          backingStore:
            etcd:
              embedded:
                enabled: true
          coredns:
            enabled: true
            embedded: true
    accessPoint:
      ingress: {}
    spaceTemplate:
      metadata: {}
  parameters:
    - variable: nodeSelectorHostName
      label: Host name for pod node selectors
      description: >-
        The value for the kubernetes.io/hostname node selector for both demo pods to be scheduled.
      required: true
      defaultValue: "kind-control-plane"
