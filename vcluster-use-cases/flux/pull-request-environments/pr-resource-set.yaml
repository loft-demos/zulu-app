apiVersion: fluxcd.controlplane.io/v1
kind: ResourceSet
metadata:
  name: preview-app
  # the vCluster Platform Auth Core project namespace
  namespace: p-auth-core
spec:
  inputsFrom:
    - apiVersion: fluxcd.controlplane.io/v1
      kind: ResourceSetInputProvider
      name: preview-pull-requests
  resourcesTemplate: |
    # ---------- PR-scoped (once per PR) ----------
    # two GitRepistories are used as the one for the vCluster only needs to be updated per PR
    apiVersion: source.toolkit.fluxcd.io/v1
    kind: GitRepository
    metadata:
      # GitRepository resource for the vCluster instance
      name: zulu-app-vcluster-<< inputs.id >>
      # the vCluster Platfrom Auth Core project namespace
      namespace: p-auth-core
    spec:
      provider: generic # or 'github' if using GitHub App
      interval: 48h
      url: https://github.com/loft-demos/zulu-app
      ref:
        # configured to only watch the Pull Request branch as the vCluster does not need to be updated for each PR commit
        branch: << inputs.branch >> 
    ---
    # this one, for the PR app deployment into the vCluster, needs to be updated for every PR commit
    apiVersion: source.toolkit.fluxcd.io/v1
    kind: GitRepository
    metadata:
      name: zulu-app-preview-<< inputs.id >>
      namespace: p-auth-core
    spec:
      provider: generic # or 'github' if using GitHub App
      interval: 48h
      url: https://github.com/loft-demos/zulu-app
      ref:
        # using PR head sha will trigger update on every commit to PR head branch
        commit: << inputs.sha >>

    # ---------- version-scoped (fan-out per k8s version) ----------
    <<- range $v := inputs.k8sVersions >>
    ---
    apiVersion: notification.toolkit.fluxcd.io/v1beta3
    kind: Provider
    metadata:
      name: pr-<< inputs.id >>-k8s-<< $v.name >>-wakeup
      namespace: p-auth-core
    spec:
      type: generic
      timeout: 2m
      # address is specific to the vCluster create for a given pull request id
      address: https://zulu.us.demo.dev/kubernetes/project/auth-core/virtualcluster/pr-<< inputs.id >>-k8s-<< $v.name >>-flux
      secretRef:
        name: vcluster-platform-provider-headers
    ---
    # this Alert is only needed if not using a vCluster Platform URL for the vCluster K8s API server
    apiVersion: notification.toolkit.fluxcd.io/v1beta3
    kind: Alert
    metadata:
      name: pr-<< inputs.id >>-k8s-<< $v.name >>-wakeup
      namespace: p-auth-core
    spec:
      suspend: true
      eventMetadata:
        summary: "PR Updated, wakeup vCluster"
      providerRef:
        name: pr-<< inputs.id >>-k8s-<< $v.name >>-wakeup
      eventSeverity: info
      inclusionList:
        - ".*commit.*"
      eventSources:
        - kind: GitRepository
          name: 'zulu-app-preview-<< inputs.id >>'
    ---
    apiVersion: kustomize.toolkit.fluxcd.io/v1
    kind: Kustomization
    metadata:
      # repo name with PR number and part PR label is enough to make the Virtual Cluster Instance name unique
      name: pr-<< inputs.id >>-k8s-<< $v.name >>-flux-vcluster
      namespace: p-auth-core
    spec:
      interval: 48h
      retryInterval: 30s
      # the vCluster Platform Auth Core project namespace
      targetNamespace: p-auth-core
      sourceRef:
        kind: GitRepository
        name: zulu-app-vcluster-<< inputs.id >>
      path: "./vcluster-use-cases/flux/pull-request-environments/kustomize"
      prune: true
      timeout: 5m
      wait: true
      # important: this feature requires Flux 2.5+
      healthCheckExprs:
        - apiVersion: management.loft.sh/v1
          kind: VirtualClusterInstance
          failed: "status.conditions.exists(c, c.type == 'Ready' && c.status == 'False' && c.severity == 'Error')"
          inProgress: "status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')"
          current: "status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')"
      patches:
        - target:
            kind: VirtualClusterInstance
          patch: |
            - op: add
              path: /metadata/name
              value: pr-<< inputs.id >>-k8s-<< $v.name >>-flux
            - op: replace
              path: /spec/parameters
              value: |
                k8sVersion: "<< $v.value >>"
                sleepAfter: "4"
    ---
    # Alert used to add commit statuses
    # It is created in the p-auth-core namespace because injecting the GitHub PAT Secret into the vCluster namespace takes too long
    apiVersion: notification.toolkit.fluxcd.io/v1beta3
    kind: Alert
    metadata:
      name: github-status-zulu-app-pr-<< inputs.id >>-k8s-<< $v.name >>
      namespace: p-auth-core
    spec:
      providerRef:
        name: github-status
      eventSources:
        - kind: HelmRelease
          name: '*'
          namespace: "auth-core-v-pr-<< inputs.id >>-k8s-<< $v.name >>-flux"
    ---
    # Alert used to add comment to pull request
    # It is created in the p-auth-core namespace because injecting the GitHub PAT Secret into the vCluster namespace takes too long
    apiVersion: notification.toolkit.fluxcd.io/v1beta3
    kind: Alert
    metadata:
      name: github-pr-comment-zulu-app-preview-<< inputs.id >>-k8s-<< $v.name >>
      namespace: p-auth-core
    spec:
      providerRef:
        name: github-dispatch
      eventSources:
        - kind: HelmRelease
          name: '*'
          namespace: "auth-core-v-zulu-app-flux-preview-<< inputs.id >>-k8s-<< $v.name >>"
    ---
    # Kustomization wrapper for HelmRelease to allow use of dependsOn
    apiVersion: kustomize.toolkit.fluxcd.io/v1
    kind: Kustomization
    metadata:
      name: pr-<< inputs.id >>-k8s-<< $v.name >>-flux-app
      namespace: p-auth-core
    spec:
      dependsOn:
        # this dependsOn allows for vCluster to be up and running before Flux deploys HelmRelease
        - name: pr-<< inputs.id >>-k8s-<< $v.name >>-flux-vcluster
          namespace: p-auth-core
      interval: 48h
      retryInterval: 30s
      timeout: 4m
      prune: true
      wait: true
      path: ./vcluster-use-cases/flux/flux-deploy-apps
      sourceRef:
        kind: GitRepository
        # using this GitRepository tied to the PR head commit sha
        name: zulu-app-preview-<< inputs.id >>
      patches:
        - target:
            kind: HelmRepository
          patch: |
            - op: add
              path: /metadata/namespace
              value: auth-core-v-pr-<< inputs.id >>-k8s-<< $v.name >>-flux
        - target:
            kind: HelmRelease
          patch: |
            - op: add
              path: /metadata/namespace
              # the HelmRelease must be in the same namespace as the kubeConfig.secretRef for the vCluster
              value: auth-core-v-pr-<< inputs.id >>-k8s-<< $v.name >>-flux
            - op: add
              path: /metadata/annotations
              # the following annotations are used to populate notifications
              value:
                event.toolkit.fluxcd.io/preview-url: "https://podinfo-pr-<< inputs.id >>-k8s-<< $v.name >>-flux.us.demo.dev"
                event.toolkit.fluxcd.io/pr-number: "<< inputs.id >>"
                event.toolkit.fluxcd.io/sha: "<< inputs.sha >>"
                event.toolkit.fluxcd.io/k8s-version: "<< $v.value >>"
            - op: add
              # the kubeConfig.secretRef must be in the same namesapce as the HelmRelease
              # the vCluster exportKubeConfig is configured to create the Flux useable vCluster Kube Config in the vCluster host namespace
              path: /spec/kubeConfig
              value:
                secretRef:
                  name: flux-kubeconfig
                  key: config
            - op: add
              # the uninstall config is needed to ensure the HelmRelease is deleted when a PR is closed or the Flux preview label is removed while the PR vCluster is sleeping
              path: /spec/uninstall
              value:
                timeout: 1s
                deletionPropagation: orphan
            - op: add
              path: /spec/values
              value:
                ui:
                  message: "deployed to pr-<< inputs.id >>-k8s-<< $v.name >>-flux << inputs.sha >>" # use of sha here to simulate dynamic app deployment
            - op: add
              path: /spec/values/ingress
              value:
                enabled: true
                hosts:
                  - host: "podinfo-pr-<< inputs.id >>-k8s-<< $v.name >>-flux.us.demo.dev"
                    paths:
                      - path: /
                        pathType: ImplementationSpecific
    <<- end >>